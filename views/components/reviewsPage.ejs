<script type="text/javascript">
    Vue.component('reviews-page', {
        name: 'reviewsPage',
        props: ['userObj'],
        template: `<%- include ('reviewsPage.vue') %>`,
        data: function () {
            return {
                reviewsForMe: [],
                myReviews: [],
                needReviews: [],
                rating: 0,
                reviewText: ''
            }
        },
        methods: {
            clickRating(like){
                this.rating = like;
            },
            editText(id, text){
                Swal.fire({
                    input: 'textarea',
                    inputPlaceholder: 'Type your text here...',
                    inputValue: text,
                    inputAttributes: {
                        'aria-label': 'Type your text here'
                    },
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to write something!'
                        }
                    }
                }).then((res) => {
                    socket.emit('editTextOnReview', {text: res.value, reviewId: id}, function (error, answer) {
                        if (error){
                            swal('Error', error, 'error');
                        } else {
                            swal('Success', 'Review\'s text is change', 'success');
                        }
                    });
                })
            },
            editRating(id){
                Swal.fire({
                    title: 'Select rating for review â„–' + id,
                    showCloseButton: true,
                    showCancelButton: true,
                    focusConfirm: false,
                    cancelButtonColor: '#d33',
                    confirmButtonText:
                        '<i class="fa fa-thumbs-up"></i> I like it!',
                    cancelButtonText:
                        '<i class="fa fa-thumbs-down"></i> Everything was bad!',
                }).then((res) => {
                    if (res.dismiss !== 'close'){
                        console.log(res);
                        if (res.dismiss === 'cancel'){
                            res.value = '-1'
                        } else if (res.value === 'true'){
                            res.value = '1'
                        }
                        socket.emit('editRatingOnReview', {rating: res.value, reviewId: id}, function (error, answer) {
                            if (error){
                                swal('Error', error, 'error')
                            } else {
                                swal('Success', 'Review\'s rating is change', 'success');
                            }
                        });
                    }
                })
            },
            deleteReview(id){
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this! Review: " + id,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.value) {
                        socket.emit('deleteReview', id, function (error, answer) {
                            if (error){
                                swal('Error', error, 'error')
                            } else {
                                swal('Success', 'Review is delete', 'success');
                            }
                        });
                    }
                })
            },
            postReview(toUser, order, event) {
                if (event) event.preventDefault();
                if (this.rating !== 0 && this.reviewText.length > 4){
                    var obj = {
                        orderId: order,
                        toUserId: toUser,
                        fromUserId: this.userObj.id,
                        text: this.reviewText,
                        raiting: this.rating,
                    }
                    socket.emit('postReview', obj, function (error, answer) {
                        if (error){
                            swal('Error', error, 'error')
                        } else {
                            swal({
                                title: 'Success',
                                type: 'success',
                                text: '',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    })
                } else {
                    swal('Error', 'Review text or rating is empty', 'error');
                }
            }
        },
        mounted() {
            if (this.userObj){
                socket.emit('getForReviewsPage', this.userObj.id, function (error, answer) {
                    if (error){
                        swal('Error', error, 'error')
                    } else {
                        console.log(answer);
                        app.$refs.reviewsPage.reviewsForMe = answer.reviewsForMe;
                        app.$refs.reviewsPage.myReviews = answer.myReviews;
                        app.$refs.reviewsPage.needReviews = answer.needReviews;
                    }
                });
            }
        }
    });
</script>